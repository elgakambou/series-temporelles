cmake_minimum_required(VERSION 2.8)
project(SeriesTemporelles CXX)

# Prefix
if (NOT PREFIX)
    set(PREFIX ${CMAKE_CURRENT_BINARY_DIR})
endif (NOT PREFIX)
set(CMAKE_INSTALL_PREFIX ${PREFIX} CACHE STRING "Installation prefix." FORCE)

if (CXX)
    set(CMAKE_CXX_COMPILER ${CXX})
endif (CXX)

# Release or Debug
if (NOT CMAKE_BUILD_TYPE)
    message(STATUS "Setting build type to 'Debug' as none was specified.")
    set(CMAKE_BUILD_TYPE Debug CACHE STRING "Choose the type of build." FORCE)
endif ()

# ## localisation de la gsl
set(CMAKE_PREFIX_PATH /home/elga/Documents/ENSIMAG/pnl/gsl-dir/gsl-dir/gsl-include/gsl ${CMAKE_PREFIX_PATH})


find_package(GSL REQUIRED) 
target_link_libraries(Unitsv1 GSL::gsl GSL::gslcblas)

# # Detect PNL
# find_package(Pnl REQUIRED)
# set(LIBS ${LIBS} ${PNL_LIBRARIES})
# include_directories(${PNL_INCLUDE_DIRS})
# if(${CMAKE_BUILD_TYPE} STREQUAL "Release")
#     add_definitions(-DPNL_RANGE_CHECK_OFF)
# endif()

# # Testing the parser
# set(SOURCES MonteCarlo.cpp main.cpp BSCall.cpp Exo1.cpp)
# set(HEADERS MonteCarlo.hpp BSCall.hpp Exo1.hpp)
# add_executable(pricebscall ${SOURCES} ${HEADERS})
# target_link_libraries(pricebscall ${LIBS})
# pnl_add_postbuild(pricebscall)

# Print compiler flags
get_directory_property(DirDefs COMPILE_DEFINITIONS)
message(STATUS "COMPILE_DEFINITIONS = ${DirDefs}")
if (${CMAKE_BUILD_TYPE} STREQUAL "Release")
    message(STATUS "C++ Flags: ${CMAKE_CXX_FLAGS} ${CMAKE_CXX_FLAGS_RELEASE} ${CMAKE_LINKER_EXE_FLAGS}" )
else()
    message(STATUS "C++ Flags: ${CMAKE_CXX_FLAGS} ${CMAKE_CXX_FLAGS_DEBUG} ${CMAKE_LINKER_EXE_FLAGS}" )
endif()

